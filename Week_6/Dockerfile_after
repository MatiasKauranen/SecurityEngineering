FROM alpine:3.20

LABEL maintainer="Teaching Assistant"
LABEL version="0.0.0.0"
LABEL description="for students to fix, original can be found in https://github.com/nodejs/docker-node"

ARG NODE_VERSION=22.9.0
ENV NODE_VERSION="${NODE_VERSION}"
ENV YARN_VERSION=1.22.22
ENV PATH=/usr/local/bin:$PATH

SHELL ["/bin/ash", "-o", "pipefail", "-c"]

RUN addgroup -g 1000 node \
    && adduser -u 1000 -G node -s /bin/sh -D node

WORKDIR /usr/local

RUN set -eux; \
    apk add --no-cache --virtual .fetch-deps \
      curl \
      ca-certificates \
      libstdc++; \
    \
    ARCH= OPENSSL_ARCH='linux*' && alpineArch="$(apk --print-arch)"; \
    case "${alpineArch##*-}" in \
        x86_64) ARCH='x64' CHECKSUM="6966b7e2e62a6c2f9d096697af980d02b83d92e23a68463f28f8fec9b408d093" OPENSSL_ARCH=linux-x86_64;; \
        x86) OPENSSL_ARCH=linux-elf;; \
        aarch64) OPENSSL_ARCH=linux-aarch64;; \
        arm*) OPENSSL_ARCH=linux-armv4;; \
        ppc64le) OPENSSL_ARCH=linux-ppc64le;; \
        s390x) OPENSSL_ARCH=linux-s390x;; \
        *) ;; \
    esac; \
    if [ -n "${CHECKSUM:-}" ]; then \
        curl -fsSLO --compressed "https://unofficial-builds.nodejs.org/download/release/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${ARCH}-musl.tar.xz"; \
        echo "${CHECKSUM}  node-v${NODE_VERSION}-linux-${ARCH}-musl.tar.xz" | sha256sum -c -; \
        tar -xJf "node-v${NODE_VERSION}-linux-${ARCH}-musl.tar.xz" -C /usr/local --strip-components=1 --no-same-owner; \
        ln -sf /usr/local/bin/node /usr/local/bin/nodejs; \
    else \
        echo "Building Node from source"; \
        apk add --no-cache --virtual .build-deps-full \
            binutils-gold \
            g++ \
            gcc \
            gnupg \
            libgcc \
            linux-headers \
            make \
            python3 \
            py3-setuptools; \
        export GNUPGHOME="$(mktemp -d)"; \
        for key in \
            4ED778F539E3634C779C87C6D7062848A1AB005C \
            141F07595B7B3FFE74309A937405533BE57C7D57 \
            74F12602B6F1C4E913FAA37AD3A89613643B6201 \
            DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 \
            61FC681DFB92A079F1685E77973F295594EC4689 \
            8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
            C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
            890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 \
            C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
            108F52B48DB57BB0CC439B2997B01419BD92F80A \
            A363A499291CBBC940DD62E41F10027AF002F8B0 \
            CC68F5A3106FF448322E48ED27F5E38D5B0A215F; do \
            gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" || \
            gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
        done; \
        curl -fsSLO --compressed "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.xz"; \
        curl -fsSLO --compressed "https://nodejs.org/dist/v${NODE_VERSION}/SHASUMS256.txt.asc"; \
        gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc; \
        gpgconf --kill all; rm -rf "$GNUPGHOME"; \
        grep " node-v${NODE_VERSION}.tar.xz\$" SHASUMS256.txt | sha256sum -c -; \
        tar -xf "node-v${NODE_VERSION}.tar.xz"; cd "node-v${NODE_VERSION}"; \
        ./configure && make -j"$(getconf _NPROCESSORS_ONLN)"; make install; \
        apk del .build-deps-full; cd ..; rm -rf "node-v${NODE_VERSION}" "node-v${NODE_VERSION}.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt; \
    fi; \
    rm -f "node-v${NODE_VERSION}-linux-${ARCH}-musl.tar.xz"; \
    if [ -d /usr/local/include/node/openssl/archs ]; then \
        find /usr/local/include/node/openssl/archs -mindepth 1 -maxdepth 1 ! -name "${OPENSSL_ARCH}" -exec rm -rf {} \; || true; \
    fi; \
    apk del .fetch-deps; \
    node --version; npm --version

RUN set -eux; \
    apk add --no-cache --virtual .fetch-deps-yarn curl gnupg tar ca-certificates; \
    export GNUPGHOME="$(mktemp -d)"; \
    for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do \
        gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" || \
        gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
    done; \
    curl -fsSLO --compressed "https://yarnpkg.com/downloads/${YARN_VERSION}/yarn-v${YARN_VERSION}.tar.gz"; \
    curl -fsSLO --compressed "https://yarnpkg.com/downloads/${YARN_VERSION}/yarn-v${YARN_VERSION}.tar.gz.asc"; \
    gpg --batch --verify "yarn-v${YARN_VERSION}.tar.gz.asc" "yarn-v${YARN_VERSION}.tar.gz"; \
    gpgconf --kill all; rm -rf "$GNUPGHOME"; \
    mkdir -p /opt; tar -xzf "yarn-v${YARN_VERSION}.tar.gz" -C /opt/; \
    ln -sf /opt/yarn-v${YARN_VERSION}/bin/yarn /usr/local/bin/yarn; \
    ln -sf /opt/yarn-v${YARN_VERSION}/bin/yarnpkg /usr/local/bin/yarnpkg; \
    rm "yarn-v${YARN_VERSION}.tar.gz.asc" "yarn-v${YARN_VERSION}.tar.gz"; \
    apk del .fetch-deps-yarn; yarn --version; rm -rf /tmp/*

COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod 0755 /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["node"]

USER node

HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 CMD node --version || exit 1
